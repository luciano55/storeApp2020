@startuml validator
class ValidatorRegistry{
  -static ValidatorRegistry validatorRegistration;
  -static final HashMap<String, Class<? extends ValidableValue>> VALIDATES 
  -ValidatorRegistry() 
  +ValidableValue getValidator(String validateName)
  +void addValidator(String validateName, Class<? extends ValidableValue> validate) 
  +static synchronized ValidatorRegistry getInstance() 
}
class ValidatorValueComposite{
  -HashMap<String, ArrayList<String>> listValidate
  -ValidatorRegistry validatorRegistration
  +HashMap<String, ErrorValidate> validate(Client client)
  -HashMap<String, ErrorValidate> getError()
  -void addValidate(String key, String value)  
}
class AddClient {
  -ValidatorValueComposite clientValidatorComposite
  -Class Client
   # doPost()
   # doGet()
}
class  HttpServlet{
}
class GetDataControlFromValue{
  +static String getDataControlClient(Client client, String value) 
}


ValidatorValueComposite *-- ValidatorRegistry
HttpServlet  <|--  AddClient 
AddClient  *-- ValidatorValueComposite
AddClient o-- GetDataControlFromValue
@enduml